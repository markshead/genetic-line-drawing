#lang racket

(require racket/gui/base)

(define img-width 250)
(define img-height 250)
(define frame (new frame% [label "Frame"] [width img-width] [height img-height]))
(define canvas (new canvas% [parent frame]))
;(define dc (send canvas get-dc))

(define candidate-dc (new bitmap-dc% [bitmap (send canvas make-bitmap img-width img-height)]))

;(define my-bitmap (send canvas make-bitmap 500 500))
;(define abe (read-bitmap "abe-500x500.png"))
(define abe (read-bitmap "abe-250x250.png"))

(define target-dc (new bitmap-dc% [bitmap abe]))
(define png-pixel-color (new color%))
(define alpha-pixel-color (new color%))
(send target-dc get-pixel (/ img-width 2) 50 png-pixel-color)
(send candidate-dc get-pixel (/ img-width 2) 50 alpha-pixel-color)

(send frame show #t)
(sleep/yield 1)
;(send dc draw-line 10 10 200 200)
;(send dc draw-line 500 0 0 500)

(define (create-random-line-coordinates)
  (list (random img-height)
        (random img-width)
        (random img-height)
        (random img-width)))

(define (create-random-line-dna (cnt 200))
  (cond ((> 0 cnt) '())
        (#t
         (cons (create-random-line-coordinates)
               (create-random-line-dna (- cnt 1))))))

(define (drawing dna [my-dc candidate-dc])
  (cond ((eq? dna '()) '())
        (#t
         (send my-dc draw-line
               (first (first dna) )
               (second (first dna))
               (third (first dna))
               (fourth (first dna)))
         (drawing (rest dna) my-dc))))

(define (random-lines-on-bm [dna (create-random-line-dna)])
  (drawing dna
           candidate-dc)
  (send candidate-dc get-bitmap))

(define (fitness-of-bw candidate-color target-color)
;  (printf "candidate color: ~a~n" (send candidate-color alpha))
;  (printf "target color: ~a~n" (send target-color red))
  (cond ((and (<= (send target-color red) 100) ( = (send candidate-color red) 0)) 1)
        ((and (> (send target-color red) 100) ( = (send candidate-color red) 255)) 1)
        ;; negative value if the color is the opposite of what is needed
        ((and (>= (send target-color red) 100) ( = (send candidate-color red) 0)) -1)
        ((and (< (send target-color red) 100) ( = (send candidate-color red) 255))-1)
        (#t 0)))

(define (fitness-of-pixel x y (candidate-dc candidate-dc) (target-dc target-dc))
  (send target-dc get-pixel x y png-pixel-color)
  (send candidate-dc get-pixel x y alpha-pixel-color)
  (fitness-of-bw alpha-pixel-color png-pixel-color))

(define (get-target-pixel-color x y)
  (send target-dc get-pixel x y png-pixel-color)
  (send png-pixel-color red))

(define (get-candidate-pixel-color x y)
  (send candidate-dc get-pixel x y alpha-pixel-color)
  (send alpha-pixel-color red))

(define (fitness-of-image x y candidate-dc target-dc accumulator)
  (cond ((and (>= x img-width) (>= y img-height)) accumulator)
        ((>= x img-width) (fitness-of-image 0 (+ 1 y) candidate-dc target-dc accumulator))
        (#t (fitness-of-image (+ 1 x) y candidate-dc target-dc (+ accumulator (fitness-of-pixel x y candidate-dc target-dc))))))

(define (fitness-of-dna dna candidate-dc target-dc)
  (send candidate-dc clear)
  (drawing dna candidate-dc)
  (fitness-of-image 0 0 candidate-dc target-dc 0))


(define (mutate-dna dna mutation-rate)
  "mutate where rate is 0 to 100"
  (cond ((eq? dna '()) '())
        ((> mutation-rate (random 100)) (cons (create-random-line-coordinates) (mutate-dna (rest dna) mutation-rate)) )
        (#t (cons (first dna) (mutate-dna (rest dna) mutation-rate)))))

(mutate-dna '((1 1 1 1) (2 2 2 2) (3 3 3 3) (4 4 4 4) (5 5 5 5) (6 6 6 6)) 10)

#;(define (evolve target-dc candidate-dc (iterations 10) (dna (create-random-line-dna)) (dna-current-score 0))
    (send dc clear)
    (drawing dna)
    (displayln dna-current-score)
    (if (<= iterations 0)
        dna
        (let* ([mutated-dna (mutate-dna dna 25)]
               [mutated-dna-fitness (fitness-of-dna mutated-dna candidate-dc target-dc)])
         
          (if (> mutated-dna-fitness dna-current-score)
              (evolve target-dc candidate-dc (- iterations 1) mutated-dna mutated-dna-fitness)
              (evolve target-dc candidate-dc (- iterations 1) dna dna-current-score)))))

(define (evolve  candidate-dc target-dc
                 (iterations 1000)
                 (dna (create-random-line-dna))
                 (dna-current-score 0))
  (let* ([mutated-dna (mutate-dna dna 1)]
         [mutated-dna-fitness (fitness-of-dna mutated-dna candidate-dc target-dc)])
    (send candidate-dc clear)
    (drawing mutated-dna candidate-dc)
    (send (send canvas get-dc) draw-bitmap (send candidate-dc get-bitmap) 0 0)
    (printf "current fitness:  ~a ~n" dna-current-score)
    (printf "mutation fitness: ~a " mutated-dna-fitness)
    (if (> mutated-dna-fitness dna-current-score)
        (printf " * ~n")
        (printf "   ~n"))
    
    (if (<= iterations 0)
        dna
        (if (> mutated-dna-fitness dna-current-score)
            (evolve candidate-dc target-dc (- iterations 1) mutated-dna mutated-dna-fitness)
            (evolve candidate-dc target-dc (- iterations 1) dna dna-current-score)))))



(define 50k
  '((193 111 93 25)
  (195 87 103 123)
  (62 109 53 33)
  (209 79 72 104)
  (189 10 12 40)
  (247 235 128 236)
  (31 239 209 216)
  (101 227 155 249)
  (68 5 179 125)
  (82 160 160 212)
  (29 78 114 12)
  (169 113 134 221)
  (131 192 82 165)
  (165 142 96 237)
  (172 51 156 204)
  (121 35 154 118)
  (179 37 86 204)
  (190 240 11 247)
  (181 124 163 13)
  (117 181 139 43)
  (168 145 82 237)
  (70 159 60 84)
  (95 205 83 166)
  (51 9 202 47)
  (82 121 125 243)
  (225 6 3 49)
  (39 238 243 240)
  (229 183 105 38)
  (171 20 154 199)
  (13 231 207 222)
  (94 234 67 239)
  (118 177 78 211)
  (129 167 177 232)
  (83 202 172 181)
  (170 42 159 246)
  (219 71 62 219)
  (40 76 172 135)
  (25 230 202 243)
  (71 14 184 39)
  (209 53 149 102)
  (161 5 189 136)
  (164 153 82 149)
  (107 246 50 101)
  (216 206 97 240)
  (222 48 95 234)
  (168 118 71 238)
  (98 209 198 84)
  (7 233 128 229)
  (248 249 66 249)
  (188 121 152 99)
  (162 17 164 122)
  (216 229 94 244)
  (111 104 187 111)
  (147 104 138 198)
  (133 215 128 121)
  (20 37 174 34)
  (198 229 104 203)
  (93 46 43 69)
  (247 242 125 231)
  (27 86 64 99)
  (15 248 196 230)
  (120 15 150 40)
  (165 39 33 33)
  (172 29 104 243)
  (171 139 147 211)
  (138 218 126 54)
  (162 23 172 170)
  (177 121 118 235)
  (85 224 124 141)
  (141 166 49 207)
  (175 116 149 142)
  (59 170 90 190)
  (126 220 147 187)
  (15 91 94 20)
  (128 225 216 246)
  (33 123 130 44)
  (148 89 82 98)
  (110 203 134 184)
  (161 159 146 76)
  (120 211 141 124)
  (78 133 170 236)
  (149 236 181 99)
  (151 24 10 24)
  (128 231 53 241)
  (165 157 156 39)
  (144 73 88 215)
  (157 69 178 148)
  (69 249 168 157)
  (121 106 150 195)
  (189 59 71 56)
  (136 248 119 63)
  (169 165 56 155)
  (146 188 180 84)
  (123 160 194 51)
  (198 90 215 94)
  (56 165 141 244)
  (139 185 187 217)
  (108 210 213 249)
  (75 87 161 159)
  (155 27 192 201)
  (198 40 66 20)
  (161 37 140 39)
  (55 210 208 228)
  (182 64 137 46)
  (118 30 176 66)
  (219 224 45 237)
  (33 246 139 147)
  (105 179 126 201)
  (175 125 80 213)
  (186 71 129 216)
  (161 235 128 122)
  (102 38 52 51)
  (163 177 131 57)
  (49 247 243 229)
  (120 4 41 78)
  (234 190 216 152)
  (37 22 43 26)
  (151 200 107 197)
  (177 47 153 206)
  (128 82 180 56)
  (59 45 170 31)
  (62 237 148 206)
  (159 183 50 222)
  (120 38 162 130)
  (194 56 120 17)
  (166 56 183 138)
  (140 181 36 222)
  (70 200 242 235)
  (220 249 42 128)
  (222 51 61 16)
  (91 100 126 100)
  (234 124 153 70)
  (116 13 176 51)
  (103 147 146 144)
  (93 30 183 64)
  (41 40 80 13)
  (31 243 193 248)
  (96 213 139 172)
  (53 73 76 151)
  (108 191 151 73)
  (189 144 154 51)
  (172 242 70 234)
  (124 157 123 140)
  (136 72 138 63)
  (221 32 103 217)
  (153 244 183 54)
  (239 240 42 234)
  (148 139 91 231)
  (240 127 112 93)
  (123 237 42 100)
  (85 223 187 212)
  (64 149 184 148)
  (75 240 142 242)
  (103 195 191 22)
  (122 229 190 69)
  (42 177 135 90)
  (43 8 28 20)
  (168 77 164 237)
  (132 243 84 122)
  (91 222 144 216)
  (231 240 104 244)
  (136 49 62 28)
  (116 249 50 77)
  (88 193 65 120)
  (75 158 208 246)
  (70 96 179 95)
  (199 2 99 18)
  (180 49 132 101)
  (125 29 157 93)
  (137 210 145 60)
  (144 177 178 127)
  (161 96 147 201)
  (162 167 175 43)
  (102 207 137 247)
  (55 56 186 7)
  (139 147 156 155)
  (95 24 96 6)
  (86 149 117 161)
  (123 246 53 246)
  (145 225 24 247)
  (97 244 129 104)
  (209 246 103 239)
  (169 145 146 179)
  (90 4 110 60)
  (103 171 157 143)
  (128 81 136 62)
  (92 192 39 63)
  (51 234 16 248)
  (131 229 89 207)
  (213 245 127 182)
  (81 245 204 6)
  (85 141 107 150)
  (123 228 131 83)
  (233 246 45 133)
  (118 184 153 129)
  (187 77 129 244)
  (182 218 70 183)
  (45 21 159 239)
  (197 215 68 52)
  (133 245 178 132)
  (244 110 234 116)))

;; We went from a ftiness of 32773 to 41573 with 2% mutation
(define 100k '((83 149 220 235)
  (71 2 189 41)
  (62 109 53 33)
  (95 14 204 42)
  (180 129 64 246)
  (247 235 128 236)
  (31 239 209 216)
  (114 220 180 72)
  (184 85 117 201)
  (133 205 177 70)
  (180 37 33 28)
  (169 113 134 221)
  (161 37 86 36)
  (131 246 168 50)
  (167 98 48 101)
  (143 177 171 78)
  (179 37 86 204)
  (196 55 139 237)
  (116 235 184 25)
  (50 18 219 46)
  (107 13 189 66)
  (61 29 56 68)
  (95 205 83 166)
  (108 248 68 134)
  (77 0 172 43)
  (124 167 184 30)
  (39 238 243 240)
  (195 232 85 176)
  (171 20 154 199)
  (120 195 236 248)
  (202 218 16 234)
  (243 231 71 240)
  (79 44 176 33)
  (155 132 84 227)
  (170 42 159 246)
  (154 183 135 93)
  (130 16 75 42)
  (25 230 202 243)
  (71 14 184 39)
  (148 97 95 216)
  (98 165 95 242)
  (212 245 14 241)
  (183 95 172 25)
  (78 103 209 76)
  (225 248 154 218)
  (176 59 161 173)
  (98 209 198 84)
  (54 155 165 237)
  (248 249 66 249)
  (50 87 75 28)
  (162 17 164 122)
  (216 229 94 244)
  (111 104 187 111)
  (60 235 157 231)
  (158 88 166 157)
  (20 37 174 34)
  (198 229 104 203)
  (117 92 150 196)
  (63 34 129 19)
  (51 249 136 190)
  (15 248 196 230)
  (120 10 189 49)
  (167 47 54 32)
  (123 231 182 39)
  (179 96 122 176)
  (125 97 140 211)
  (176 76 136 247)
  (177 121 118 235)
  (81 160 145 156)
  (62 49 141 4)
  (47 43 132 28)
  (177 76 124 242)
  (121 246 134 215)
  (131 29 61 20)
  (127 0 122 45)
  (64 30 50 109)
  (230 246 87 224)
  (141 245 167 107)
  (25 185 13 197)
  (120 211 141 124)
  (102 244 56 93)
  (236 243 31 143)
  (193 228 57 131)
  (164 232 74 166)
  (110 189 146 87)
  (173 228 115 146)
  (182 34 138 190)
  (129 136 133 199)
  (34 42 129 35)
  (78 187 151 219)
  (40 248 147 155)
  (121 145 90 242)
  (80 247 169 154)
  (121 179 169 60)
  (153 182 191 247)
  (119 134 165 230)
  (121 233 198 220)
  (150 22 56 53)
  (47 231 219 230)
  (161 71 167 23)
  (112 140 171 199)
  (88 245 149 91)
  (52 87 88 106)
  (124 153 136 235)
  (105 182 147 244)
  (219 224 45 237)
  (173 63 85 196)
  (80 241 178 215)
  (57 119 105 225)
  (79 167 134 200)
  (166 202 222 235)
  (165 97 153 178)
  (74 18 124 24)
  (98 19 191 45)
  (120 4 41 78)
  (217 241 24 246)
  (108 85 93 104)
  (130 144 102 228)
  (177 47 153 206)
  (180 81 154 180)
  (59 45 170 31)
  (153 214 147 242)
  (88 212 178 117)
  (189 32 144 121)
  (224 240 118 177)
  (220 240 14 134)
  (2 240 222 248)
  (139 196 125 115)
  (86 205 49 87)
  (132 210 178 78)
  (142 143 162 66)
  (177 49 161 82)
  (116 13 176 51)
  (115 181 102 224)
  (164 86 51 238)
  (57 128 222 248)
  (31 243 193 248)
  (128 225 175 129)
  (133 172 119 88)
  (108 191 151 73)
  (67 24 142 42)
  (170 60 154 162)
  (107 213 44 88)
  (179 236 120 100)
  (73 38 37 139)
  (153 244 183 54)
  (239 240 42 234)
  (189 82 143 194)
  (35 238 134 242)
  (157 224 96 187)
  (154 196 158 145)
  (9 233 216 234)
  (81 156 212 230)
  (154 214 193 63)
  (122 229 190 69)
  (187 94 155 159)
  (163 36 158 249)
  (209 226 2 232)
  (186 27 145 188)
  (97 9 33 90)
  (79 102 157 113)
  (164 42 144 201)
  (116 249 50 77)
  (113 209 121 236)
  (75 158 208 246)
  (70 96 179 95)
  (72 241 239 244)
  (152 192 65 237)
  (170 30 143 236)
  (211 247 115 236)
  (169 225 126 131)
  (54 154 152 243)
  (163 97 33 111)
  (187 95 108 187)
  (64 214 142 178)
  (157 36 62 23)
  (152 132 106 226)
  (68 24 101 39)
  (227 239 28 231)
  (121 141 86 192)
  (129 248 137 146)
  (209 246 103 239)
  (134 18 27 75)
  (90 4 110 60)
  (21 248 236 241)
  (78 236 147 231)
  (190 227 45 223)
  (51 234 16 248)
  (191 93 107 246)
  (213 245 127 182)
  (5 243 232 242)
  (38 78 89 7)
  (123 228 131 83)
  (62 224 236 239)
  (104 201 198 75)
  (76 233 213 220)
  (182 218 70 183)
  (72 215 188 107)
  (159 38 150 211)
  (133 245 178 132)
  (201 244 118 130)))

(define 150k
  '((114 213 174 77)
  (132 202 125 87)
  (62 109 53 33)
  (151 34 73 46)
  (180 129 64 246)
  (55 76 93 229)
  (31 239 209 216)
  (114 220 180 72)
  (184 85 117 201)
  (133 205 177 70)
  (45 107 158 107)
  (125 120 123 197)
  (83 23 146 18)
  (48 80 60 31)
  (167 98 48 101)
  (192 95 142 228)
  (42 239 215 228)
  (134 148 99 195)
  (167 49 145 202)
  (165 163 84 170)
  (178 34 95 184)
  (17 245 180 224)
  (49 79 78 24)
  (108 248 68 134)
  (163 193 161 45)
  (138 217 228 235)
  (39 238 243 240)
  (195 232 85 176)
  (171 20 154 199)
  (120 195 236 248)
  (202 218 16 234)
  (242 236 140 226)
  (79 44 176 33)
  (171 30 49 34)
  (170 42 159 246)
  (87 203 233 238)
  (130 16 75 42)
  (52 224 202 248)
  (71 14 184 39)
  (79 20 201 45)
  (94 214 178 135)
  (212 245 14 241)
  (183 95 172 25)
  (126 9 81 25)
  (70 147 112 224)
  (176 59 161 173)
  (98 209 198 84)
  (64 201 242 240)
  (248 249 66 249)
  (77 192 223 248)
  (177 242 118 118)
  (249 248 49 145)
  (75 8 167 41)
  (60 235 157 231)
  (147 87 173 230)
  (134 4 34 40)
  (135 90 97 202)
  (117 92 150 196)
  (63 34 129 19)
  (198 206 39 239)
  (168 157 155 78)
  (120 10 189 49)
  (167 47 54 32)
  (123 231 182 39)
  (179 96 122 176)
  (125 97 140 211)
  (176 76 136 247)
  (177 121 118 235)
  (135 6 189 103)
  (62 49 141 4)
  (136 205 184 87)
  (222 248 20 245)
  (127 240 169 91)
  (186 98 77 108)
  (127 0 122 45)
  (49 235 178 207)
  (230 246 87 224)
  (46 118 83 3)
  (140 232 71 145)
  (179 50 93 35)
  (102 244 56 93)
  (236 243 31 143)
  (167 69 112 208)
  (94 198 59 115)
  (110 189 146 87)
  (49 110 168 104)
  (182 34 138 190)
  (184 97 83 97)
  (136 8 106 43)
  (160 149 160 22)
  (40 248 147 155)
  (84 222 174 233)
  (125 45 57 39)
  (122 246 42 87)
  (49 87 77 150)
  (184 123 71 223)
  (66 30 52 93)
  (86 224 167 218)
  (47 231 219 230)
  (107 204 127 142)
  (169 33 105 12)
  (88 245 149 91)
  (181 86 144 240)
  (133 19 46 62)
  (55 104 177 95)
  (219 224 45 237)
  (89 15 125 5)
  (43 239 202 97)
  (73 20 48 120)
  (103 229 162 78)
  (171 108 158 207)
  (77 30 154 37)
  (160 33 58 46)
  (95 239 194 232)
  (120 4 41 78)
  (217 241 24 246)
  (33 57 150 14)
  (148 243 185 97)
  (177 47 153 206)
  (180 81 154 180)
  (59 45 170 31)
  (221 243 107 237)
  (88 212 178 117)
  (96 247 91 149)
  (86 224 219 228)
  (101 196 242 240)
  (2 240 222 248)
  (50 76 88 23)
  (86 205 49 87)
  (132 210 178 78)
  (182 245 78 242)
  (139 239 83 161)
  (116 13 176 51)
  (135 172 172 75)
  (164 86 51 238)
  (57 128 222 248)
  (31 243 193 248)
  (150 39 189 102)
  (54 42 122 19)
  (163 230 173 52)
  (185 97 115 220)
  (127 196 182 82)
  (103 234 14 248)
  (179 236 120 100)
  (177 97 140 226)
  (153 244 183 54)
  (239 240 42 234)
  (107 6 181 43)
  (35 238 134 242)
  (99 188 138 88)
  (198 240 83 240)
  (9 233 216 234)
  (182 43 87 19)
  (44 99 195 106)
  (196 225 63 140)
  (14 242 147 244)
  (163 36 158 249)
  (60 64 69 142)
  (186 27 145 188)
  (122 225 178 39)
  (79 102 157 113)
  (164 42 144 201)
  (181 219 53 228)
  (98 192 184 96)
  (75 158 208 246)
  (70 96 179 95)
  (72 241 239 244)
  (152 192 65 237)
  (170 30 143 236)
  (63 23 103 25)
  (110 249 53 108)
  (101 207 53 98)
  (163 97 33 111)
  (144 7 187 143)
  (175 147 33 242)
  (157 36 62 23)
  (120 213 129 85)
  (162 98 179 46)
  (227 239 28 231)
  (174 88 136 186)
  (172 26 180 114)
  (140 152 124 214)
  (81 15 43 120)
  (130 96 90 229)
  (21 248 236 241)
  (202 81 85 109)
  (56 47 65 108)
  (158 242 70 138)
  (191 93 107 246)
  (120 213 170 29)
  (122 94 70 106)
  (117 12 56 49)
  (130 104 114 188)
  (62 224 236 239)
  (70 129 126 237)
  (31 248 121 247)
  (182 218 70 183)
  (66 223 239 237)
  (220 234 90 186)
  (154 31 101 19)
  (201 244 118 130)))

(evolve candidate-dc target-dc 50000 100k)
